{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thali\\\\Desktop\\\\event-availability-frontend\\\\src\\\\pages\\\\EventDetails.js\",\n  _s = $RefreshSig$();\n// Arquivo EventDetails.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getEventById } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetails() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [event, setEvent] = useState(null);\n  useEffect(() => {\n    const fetchEventDetails = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const {\n          data\n        } = await getEventById(id, token);\n        setEvent(data);\n      } catch (error) {\n        console.error('Erro ao buscar detalhes do evento', error);\n      }\n    };\n    fetchEventDetails();\n  }, [id]);\n  if (!event) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando detalhes do evento...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Detalhes do Evento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Nome:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 10\n      }, this), \" \", event.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Descri\\xE7\\xE3o:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 10\n      }, this), \" \", event.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(EventDetails, \"BFgsuCnwlOXyKQ/Am/ASIdf7yXw=\", false, function () {\n  return [useParams];\n});\n_c = EventDetails;\nexport default EventDetails;\nvar _c;\n$RefreshReg$(_c, \"EventDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getEventById","jsxDEV","_jsxDEV","EventDetails","_s","id","event","setEvent","fetchEventDetails","token","localStorage","getItem","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","description","_c","$RefreshReg$"],"sources":["C:/Users/thali/Desktop/event-availability-frontend/src/pages/EventDetails.js"],"sourcesContent":["// Arquivo EventDetails.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getEventById } from '../api/api';\r\n\r\nfunction EventDetails() {\r\n  const { id } = useParams();\r\n  const [event, setEvent] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchEventDetails = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const { data } = await getEventById(id, token);\r\n        setEvent(data);\r\n      } catch (error) {\r\n        console.error('Erro ao buscar detalhes do evento', error);\r\n      }\r\n    };\r\n    fetchEventDetails();\r\n  }, [id]);\r\n\r\n  if (!event) {\r\n    return <p>Carregando detalhes do evento...</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"event-details\">\r\n      <h2>Detalhes do Evento</h2>\r\n      <p><strong>Nome:</strong> {event.name}</p>\r\n      <p><strong>Descrição:</strong> {event.description}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventDetails;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,YAAY,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMZ,YAAY,CAACK,EAAE,EAAEI,KAAK,CAAC;QAC9CF,QAAQ,CAACK,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;IACDL,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,KAAK,EAAE;IACV,oBAAOJ,OAAA;MAAAa,QAAA,EAAG;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAChD;EAEA,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,eAAe;IAAAL,QAAA,gBAC5Bb,OAAA;MAAAa,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BjB,OAAA;MAAAa,QAAA,gBAAGb,OAAA;QAAAa,QAAA,EAAQ;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACb,KAAK,CAACe,IAAI;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CjB,OAAA;MAAAa,QAAA,gBAAGb,OAAA;QAAAa,QAAA,EAAQ;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACb,KAAK,CAACgB,WAAW;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV;AAACf,EAAA,CA5BQD,YAAY;EAAA,QACJJ,SAAS;AAAA;AAAAwB,EAAA,GADjBpB,YAAY;AA8BrB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}